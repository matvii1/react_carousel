{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","shiftX","this","images","props","imgWidth","className","style","transform","map","image","index","src","alt","type","disabled","onClick","setState","React","Component","App","length","ReactDOM","render","document","getElementById"],"mappings":"uPAWaA,EAAb,4MACEC,MAAe,CACbC,OAAQ,GAFZ,4CAKE,WAAU,IAAD,OACCA,EAAWC,KAAKF,MAAhBC,OACAE,EAAWD,KAAKE,MAAhBD,OACFE,EAAW,IAuBjB,OACE,sBAAKC,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SACE,qBACEA,UAAU,YACVC,MAAO,CACLC,UAAU,cAAD,OAAgBP,EAAhB,QAHb,SAMGE,EAAOM,KAAI,SAACC,EAAeC,GAAhB,OACV,6BACE,qBACEC,IAAKF,EACLG,IAAG,UAAKF,EAAL,MAAgB,GACnBL,UAAU,mBAJLI,UAUf,wBACEI,KAAK,SACLR,UAAU,OACVS,SAzCmB,IAyCTd,EACVe,QAAS,WAvCb,EAAKC,SAAS,CACZhB,QANyB,MAMhBA,EACLA,EAASI,EACTJ,EAASI,OAgCb,kBAQA,wBACES,KAAK,SACLR,UAAU,OACVS,UAlDqB,MAkDXd,EACVe,QAAS,WAvCb,EAAKC,SAAS,CACZhB,QAf0B,MAejBA,EACLA,EAASI,EACTJ,EAASI,OAgCb,yBA3DR,GAA8Ba,IAAMC,WCH9BC,E,4MACJpB,MAAQ,CACNG,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWD,KAAKF,MAAhBG,OAER,OACE,sBAAKG,UAAU,MAAf,UACE,qDACoBH,EAAOkB,OAD3B,aAIA,cAAC,EAAD,CAAUlB,OAAQA,W,GAzBRe,IAAMC,WA+BTC,ICpCfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.48c7609a.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  shiftX: number,\n};\n\ntype Images = {\n  images: string[];\n};\n\nexport class Carousel extends React.Component<Images, State> {\n  state: State = {\n    shiftX: 0,\n  };\n\n  render() {\n    const { shiftX } = this.state;\n    const { images } = this.props;\n    const imgWidth = 130;\n    const shiftAmount = 3;\n    const smallScrollRightPoint = -780;\n    const smallScrollLeftPoint = -130;\n    const disableRightPoint = -910;\n    const disableLeftPoint = 0;\n\n    const handlerPrev = () => {\n      this.setState({\n        shiftX: (shiftX === smallScrollLeftPoint\n          ? shiftX + imgWidth\n          : shiftX + imgWidth * shiftAmount),\n      });\n    };\n\n    const handlerNext = () => {\n      this.setState({\n        shiftX: (shiftX === smallScrollRightPoint\n          ? shiftX - imgWidth\n          : shiftX - imgWidth * shiftAmount),\n      });\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <ul className=\"Carousel__list\">\n          <div\n            className=\"Container\"\n            style={{\n              transform: `translateX(${shiftX}px)`,\n            }}\n          >\n            {images.map((image: string, index: number) => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={`${index} + ${1}`}\n                  className=\"Carousel__img\"\n                />\n              </li>\n            ))}\n          </div>\n        </ul>\n        <button\n          type=\"button\"\n          className=\"Prev\"\n          disabled={shiftX === disableLeftPoint}\n          onClick={() => handlerPrev()}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          className=\"Next\"\n          disabled={shiftX === disableRightPoint}\n          onClick={() => handlerNext()}\n        >\n          Next\n        </button>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}